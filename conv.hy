(import [numpy :as np])
(import [scipy :as sp])
(import [scipy [signal]])

(import matplotlib)
(import [matplotlib.pyplot :as plt])

(require [hy.contrib.walk [let]])
(require [hy.extra.anaphoric [*]])

;; 1D-Convolution: Convolve 2 Rectangles
(setv sig (.repeat np [0. 1. 0.] 100))
(setv win (.concatenate np (, (.repeat np [0.] 140)
                              (.repeat np [1.] 10)
                              (.repeat np [0.] (- (* 100 3) 150)))
                           :axis 0))
(setv flt (/ (.convolve signal sig win :mode "same") (sum win)))
(setv [fig [ax-org ax-win ax-flt]] (.subplots plt 3 1 :sharex True))

(.plot ax-org sig)
(.set-title ax-org "Original Rectangle")
(.margins ax-org 0 0.1)
(.plot ax-win win)
(.set-title ax-win "Filter Impulse Response")
(.margins ax-win 0 0.1)
(.plot ax-flt flt)
(.set-title ax-flt "Filtered Signal")
(.margins ax-flt 0 0.1)
(.tight-layout fig)
(.show fig)

;; 1D-Convolution: Convolve Rectangle with Filter
(setv sig (.concatenate np (, (.repeat np [0.] 100)
                              (.repeat np [1.] 5)
                              (.repeat np [0.] 90)
                              (.repeat np [1.] 5)
                              (.repeat np [0.] (- (* 100 3) 200)))
                           :axis 0))
(setv win (.concatenate np (, (.repeat np [0.] 130)
                              (.repeat np [1.] 40)
                              (.repeat np [0.] (- (* 100 3) 170)))
                           :axis 0))
(setv flt (/ (.convolve signal sig win :mode "same") (sum win)))
(setv [fig [ax-org ax-win ax-flt]] (.subplots plt 3 1 :sharex True))

(.plot ax-org sig)
(.set-title ax-org "Original Rectangle")
(.margins ax-org 0 0.1)
(.plot ax-win win)
(.set-title ax-win "Filter Impulse Response")
(.margins ax-win 0 0.1)
(.plot ax-flt flt)
(.set-title ax-flt "Filtered Signal")
(.margins ax-flt 0 0.1)
(.tight-layout fig)
(.show fig)

;; 2D-Convolution
(setv sig (.zeros np [15 15]))
(setv (get sig (, (slice 6 9) (slice 3 7))) 1)
(setv win (.ones np [3 3]))
(setv flt (.convolve2d signal sig win :boundary "symm" :mode "same"))
(setv [fig [ax-org ax-flt]] (.subplots plt 1 2))

(.set-aspect ax-org "equal")
(.matshow ax-org sig)
(.set-title ax-org "Original Rectangle")
(.set-aspect ax-flt "equal")
(.matshow ax-flt flt)
(.set-title ax-flt "Filtered Signal")
(.tight-layout fig)
(.show fig)
